/**
 * Servi√ßo de Email da MECA
 * Implementa templates profissionais com identidade visual da MECA
 */

const nodemailer = require('nodemailer')

// Configura√ß√£o SMTP
const SMTP_CONFIG = {
  host: 'smtp.gmail.com',
  port: 587,
  secure: false,
  auth: {
    user: process.env.EMAIL_USER || 'meca@mecabr.com',
    pass: process.env.EMAIL_PASS || 'sua_senha_aqui'
  }
}

const transporter = nodemailer.createTransporter(SMTP_CONFIG)

/**
 * Template base para todos os emails da MECA
 */
function getBaseTemplate(content: string, title: string): string {
  return `
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .header {
            background: linear-gradient(135deg, #00A651 0%, #007A3D 100%);
            color: white;
            padding: 30px 20px;
            text-align: center;
        }
        .logo {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .tagline {
            font-size: 14px;
            opacity: 0.9;
        }
        .content {
            padding: 40px 30px;
        }
        .footer {
            background-color: #f8f9fa;
            padding: 20px;
            text-align: center;
            border-top: 1px solid #e9ecef;
        }
        .footer-text {
            font-size: 12px;
            color: #6c757d;
            margin-bottom: 10px;
        }
        .social-links {
            margin-top: 15px;
        }
        .social-links a {
            color: #00A651;
            text-decoration: none;
            margin: 0 10px;
        }
        .button {
            display: inline-block;
            background-color: #00A651;
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            margin: 20px 0;
        }
        .button:hover {
            background-color: #007A3D;
        }
        .highlight {
            background-color: #e8f5e8;
            padding: 15px;
            border-left: 4px solid #00A651;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">MECA</div>
            <div class="tagline">Sua oficina de confian√ßa</div>
        </div>
        
        <div class="content">
            ${content}
        </div>
        
        <div class="footer">
            <div class="footer-text">
                <strong>MECA - Sistema de Agendamento Automotivo</strong><br>
                Conectando clientes e oficinas de forma inteligente
            </div>
            <div class="social-links">
                <a href="https://mecabr.com">Website</a> |
                <a href="mailto:contato@mecabr.com">Contato</a> |
                <a href="https://mecabr.com/suporte">Suporte</a>
            </div>
        </div>
    </div>
</body>
</html>
  `
}

/**
 * Email de boas-vindas para clientes
 */
export async function sendWelcomeCustomer(customer: {
  name: string
  email: string
  phone?: string
}): Promise<void> {
  const content = `
    <h2>Bem-vindo √† MECA, ${customer.name}!</h2>
    
    <p>√â um prazer t√™-lo conosco! Sua conta foi criada com sucesso e voc√™ j√° pode come√ßar a agendar servi√ßos para seu ve√≠culo.</p>
    
    <div class="highlight">
        <strong>O que voc√™ pode fazer agora:</strong>
        <ul>
            <li>üìÖ Agendar servi√ßos para seu ve√≠culo</li>
            <li>üîç Encontrar oficinas pr√≥ximas</li>
            <li>üì± Receber notifica√ß√µes sobre seus agendamentos</li>
            <li>‚≠ê Avaliar o atendimento recebido</li>
        </ul>
    </div>
    
    <p>Se voc√™ tiver alguma d√∫vida, nossa equipe de suporte est√° sempre dispon√≠vel para ajudar.</p>
    
    <a href="https://mecabr.com/app" class="button">Acessar App</a>
    
    <p><strong>Dados da sua conta:</strong></p>
    <ul>
        <li>Nome: ${customer.name}</li>
        <li>Email: ${customer.email}</li>
        ${customer.phone ? `<li>Telefone: ${customer.phone}</li>` : ''}
    </ul>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: customer.email,
    subject: 'Bem-vindo √† MECA! Sua conta foi criada com sucesso',
    html: getBaseTemplate(content, 'Bem-vindo √† MECA')
  }
  
  await transporter.sendMail(mailOptions)
}

/**
 * Email de boas-vindas para oficinas
 */
export async function sendWelcomeWorkshop(workshop: {
  name: string
  email: string
  companyName?: string
  phone?: string
}): Promise<void> {
  const content = `
    <h2>Bem-vindo √† MECA, ${workshop.name}!</h2>
    
    <p>Sua oficina <strong>${workshop.companyName || 'Oficina'}</strong> foi cadastrada com sucesso em nossa plataforma!</p>
    
    <div class="highlight">
        <strong>O que voc√™ pode fazer agora:</strong>
        <ul>
            <li>üìÖ Gerenciar agendamentos de clientes</li>
            <li>üí∞ Acompanhar pagamentos e comiss√µes</li>
            <li>üìä Visualizar relat√≥rios de performance</li>
            <li>‚≠ê Receber avalia√ß√µes dos clientes</li>
        </ul>
    </div>
    
    <p>Sua conta est√° sendo analisada por nossa equipe e voc√™ receber√° uma confirma√ß√£o de aprova√ß√£o em breve.</p>
    
    <a href="https://mecabr.com/oficina" class="button">Acessar Painel da Oficina</a>
    
    <p><strong>Dados da sua oficina:</strong></p>
    <ul>
        <li>Respons√°vel: ${workshop.name}</li>
        <li>Email: ${workshop.email}</li>
        ${workshop.companyName ? `<li>Oficina: ${workshop.companyName}</li>` : ''}
        ${workshop.phone ? `<li>Telefone: ${workshop.phone}</li>` : ''}
    </ul>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: workshop.email,
    subject: 'Bem-vindo √† MECA! Sua oficina foi cadastrada',
    html: getBaseTemplate(content, 'Bem-vindo √† MECA')
  }
  
  await transporter.sendMail(mailOptions)
}

/**
 * Email de recupera√ß√£o de senha
 */
export async function sendPasswordReset(email: string, resetToken: string, userType: 'customer' | 'workshop'): Promise<void> {
  const resetUrl = `https://mecabr.com/${userType}/reset-password?token=${resetToken}`
  
  const content = `
    <h2>Recupera√ß√£o de Senha</h2>
    
    <p>Recebemos uma solicita√ß√£o para redefinir a senha da sua conta.</p>
    
    <div class="highlight">
        <strong>Para redefinir sua senha:</strong>
        <ol>
            <li>Clique no bot√£o abaixo</li>
            <li>Digite sua nova senha</li>
            <li>Confirme a nova senha</li>
        </ol>
    </div>
    
    <a href="${resetUrl}" class="button">Redefinir Senha</a>
    
    <p><strong>Link direto:</strong><br>
    <a href="${resetUrl}">${resetUrl}</a></p>
    
    <p><em>Este link expira em 1 hora por motivos de seguran√ßa.</em></p>
    
    <p>Se voc√™ n√£o solicitou esta redefini√ß√£o, ignore este email.</p>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: email,
    subject: 'Redefinir senha - MECA',
    html: getBaseTemplate(content, 'Recupera√ß√£o de Senha')
  }
  
  await transporter.sendMail(mailOptions)
}

/**
 * Email de confirma√ß√£o de agendamento
 */
export async function sendBookingConfirmed(booking: {
  customerName: string
  customerEmail: string
  workshopName: string
  serviceDate: string
  serviceTime: string
  vehicleInfo: string
  serviceDescription: string
}): Promise<void> {
  const content = `
    <h2>Agendamento Confirmado! üéâ</h2>
    
    <p>Ol√° <strong>${booking.customerName}</strong>,</p>
    
    <p>Seu agendamento foi <strong>confirmado</strong> pela oficina <strong>${booking.workshopName}</strong>!</p>
    
    <div class="highlight">
        <strong>Detalhes do seu agendamento:</strong>
        <ul>
            <li>üìÖ <strong>Data:</strong> ${booking.serviceDate}</li>
            <li>üïê <strong>Hor√°rio:</strong> ${booking.serviceTime}</li>
            <li>üöó <strong>Ve√≠culo:</strong> ${booking.vehicleInfo}</li>
            <li>üîß <strong>Servi√ßo:</strong> ${booking.serviceDescription}</li>
            <li>üè¢ <strong>Oficina:</strong> ${booking.workshopName}</li>
        </ul>
    </div>
    
    <p>Chegue com alguns minutos de anteced√™ncia e leve a documenta√ß√£o do ve√≠culo.</p>
    
    <a href="https://mecabr.com/app/agendamentos" class="button">Ver Meus Agendamentos</a>
    
    <p>Em caso de d√∫vidas, entre em contato conosco ou com a oficina diretamente.</p>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: booking.customerEmail,
    subject: `Agendamento confirmado - ${booking.workshopName}`,
    html: getBaseTemplate(content, 'Agendamento Confirmado')
  }
  
  await transporter.sendMail(mailOptions)
}

/**
 * Email de rejei√ß√£o de agendamento
 */
export async function sendBookingRejected(booking: {
  customerName: string
  customerEmail: string
  workshopName: string
  serviceDate: string
  reason?: string
}): Promise<void> {
  const content = `
    <h2>Agendamento N√£o Dispon√≠vel</h2>
    
    <p>Ol√° <strong>${booking.customerName}</strong>,</p>
    
    <p>Infelizmente, a oficina <strong>${booking.workshopName}</strong> n√£o p√¥de confirmar seu agendamento para <strong>${booking.serviceDate}</strong>.</p>
    
    ${booking.reason ? `
    <div class="highlight">
        <strong>Motivo:</strong> ${booking.reason}
    </div>
    ` : ''}
    
    <p>N√£o se preocupe! Voc√™ pode:</p>
    <ul>
        <li>üîÑ Tentar agendar em outro hor√°rio</li>
        <li>üè¢ Procurar outras oficinas pr√≥ximas</li>
        <li>üìû Entrar em contato conosco para ajuda</li>
    </ul>
    
    <a href="https://mecabr.com/app/agendar" class="button">Agendar Novamente</a>
    
    <p>Nossa equipe est√° sempre dispon√≠vel para ajudar voc√™ a encontrar a melhor solu√ß√£o!</p>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: booking.customerEmail,
    subject: `Agendamento n√£o dispon√≠vel - ${booking.workshopName}`,
    html: getBaseTemplate(content, 'Agendamento N√£o Dispon√≠vel')
  }
  
  await transporter.sendMail(mailOptions)
}

/**
 * Email de aprova√ß√£o de oficina
 */
export async function sendWorkshopApproved(workshop: {
  name: string
  email: string
  companyName: string
}): Promise<void> {
  const content = `
    <h2>Parab√©ns! Sua oficina foi aprovada! üéâ</h2>
    
    <p>Ol√° <strong>${workshop.name}</strong>,</p>
    
    <p>√â com grande satisfa√ß√£o que informamos que sua oficina <strong>${workshop.companyName}</strong> foi <strong>aprovada</strong> em nossa plataforma!</p>
    
    <div class="highlight">
        <strong>O que isso significa:</strong>
        <ul>
            <li>‚úÖ Sua oficina est√° ativa na plataforma</li>
            <li>üìÖ Voc√™ pode receber agendamentos de clientes</li>
            <li>üí∞ Come√ßar a gerar receita atrav√©s da MECA</li>
            <li>üìä Acessar relat√≥rios e m√©tricas</li>
        </ul>
    </div>
    
    <a href="https://mecabr.com/oficina" class="button">Acessar Painel da Oficina</a>
    
    <p>Bem-vindo √† nossa rede de oficinas parceiras! Estamos aqui para apoiar o crescimento do seu neg√≥cio.</p>
  `
  
  const mailOptions = {
    from: '"MECA" <noreply@mecabr.com>',
    to: workshop.email,
    subject: 'Oficina aprovada - Bem-vindo √† MECA!',
    html: getBaseTemplate(content, 'Oficina Aprovada')
  }
  
  await transporter.sendMail(mailOptions)
}

export default {
  sendWelcomeCustomer,
  sendWelcomeWorkshop,
  sendPasswordReset,
  sendBookingConfirmed,
  sendBookingRejected,
  sendWorkshopApproved
}
